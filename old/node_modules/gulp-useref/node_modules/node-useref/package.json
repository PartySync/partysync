{
  "name": "node-useref",
  "version": "0.2.10",
  "description": "Parse build blocks in HTML files to replace references",
  "main": "src/index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test"
  },
  "keywords": [
    "build",
    "blocks",
    "build",
    "comments",
    "replace",
    "scripts",
    "link",
    "ref"
  ],
  "author": {
    "name": "Manuel Cabral",
    "url": "m.cabral@digisfera.pt"
  },
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "chai": "~1.8.1",
    "mocha": "~1.17.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/manuelcabral/useref.git"
  },
  "readme": "# useref\r\n\r\nParse build blocks in HTML files to replace references\r\n\r\nExtracted from the grunt plugin [grunt-useref](https://github.com/pajtai/grunt-useref).\r\n\r\n## Installation\r\n\r\n```\r\nnpm install node-useref\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nuseref = require('node-useref')\r\nvar result = useref(inputHtml)\r\n// result = [ replacedHtml, { type: { path: { 'assets': [ replacedFiles] }}} ]\r\n```\r\n\r\n\r\nBlocks are expressed as:\r\n\r\n```html\r\n<!-- build:<type>(alternate search path) <path> -->\r\n... HTML Markup, list of script / link tags.\r\n<!-- endbuild -->\r\n```\r\n\r\n- **type**: either `js`, `css` or `remove`\r\n- **alternate search path**: (optional) By default the input files are relative to the treated file. Alternate search path allows one to change that\r\n- **path**: the file path of the optimized file, the target output\r\n\r\nAn example of this in completed form can be seen below:\r\n\r\n```html\r\n<html>\r\n<head>\r\n  <!-- build:css css/combined.css -->\r\n  <link href=\"css/one.css\" rel=\"stylesheet\">\r\n  <link href=\"css/two.css\" rel=\"stylesheet\">\r\n  <!-- endbuild -->\r\n</head>\r\n<body>\r\n  <!-- build:js scripts/combined.js -->\r\n  <script type=\"text/javascript\" src=\"scripts/one.js\"></script>\r\n  <script type=\"text/javascript\" src=\"scripts/two.js\"></script>\r\n  <!-- endbuild -->\r\n</body>\r\n</html>\r\n```\r\n\r\nThe module would be used with the above sample HTML as follows:\r\n\r\n```js\r\nvar result = useref(sampleHtml)\r\n\r\n// [\r\n//   resultHtml,\r\n//   {\r\n//     css: {\r\n//       'css/combined.css': {\r\n//         'assets': [ 'css/one.css', 'css/two.css' ]\r\n//       }\r\n//     },\r\n//     js: {\r\n//       'scripts/combined.js': {\r\n//         'assets': [ 'css/one.js', 'css/two.js' ]\r\n//       }\r\n//     }\r\n//   }\r\n// ]\r\n```\r\n\r\n\r\nThe resulting HTML would be:\r\n\r\n```html\r\n<html>\r\n<head>\r\n  <link rel=\"stylesheet\" href=\"css/combined.css\"/>\r\n</head>\r\n<body>\r\n  <script src=\"scripts/combined.js\"></script>\r\n</body>\r\n</html>\r\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/manuelcabral/useref/issues"
  },
  "homepage": "https://github.com/manuelcabral/useref",
  "_id": "node-useref@0.2.10",
  "_shasum": "a44a38169bf03a2e84b666690c64844232d3394b",
  "_from": "node-useref@^0.2.7",
  "_resolved": "https://registry.npmjs.org/node-useref/-/node-useref-0.2.10.tgz"
}
