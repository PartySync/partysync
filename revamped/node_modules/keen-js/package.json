{
  "name": "keen-js",
  "version": "3.2.2",
  "main": "src/server/index.js",
  "browser": "src/keen.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/keen/keen-js.git"
  },
  "scripts": {
    "start": "gulp with-tests",
    "test": "gulp test:cli"
  },
  "bugs": {
    "url": "https://github.com/keen/keen-js/issues"
  },
  "author": {
    "name": "Dustin Larimer",
    "email": "dustin@keen.io",
    "url": "https://keen.io/"
  },
  "contributors": [
    {
      "name": "Dustin Larimer",
      "email": "dustin@keen.io",
      "url": "https://github.com/dustinlarimer"
    },
    {
      "name": "Sean Dokko",
      "email": "dokko1230@gmail.com",
      "url": "http://seandokko.com/"
    },
    {
      "name": "Jordan Klassen",
      "email": "forivall@gmail.com",
      "url": "http://forivall.github.io"
    },
    {
      "name": "Josh Dzielak",
      "email": "josh@keen.io",
      "url": "http://dzello.com"
    },
    {
      "name": "Ryan Spraetz",
      "email": "ryan@keen.io",
      "url": "https://keen.io"
    },
    {
      "name": "Dan Kador",
      "email": "dan@keen.io",
      "url": "https://keen.io"
    },
    {
      "name": "Cory Watson",
      "email": "github@onemogin.com",
      "url": "http://www.onemogin.com"
    },
    {
      "name": "Joshua Coats",
      "email": "joshua@keen.io",
      "url": "https://github.com/joshukeen"
    },
    {
      "name": "Micah Wolfe",
      "email": "micah@keen.io",
      "url": "https://github.com/forzalupo"
    },
    {
      "name": "Tim Schiller",
      "email": "timothy.schiller@gmail.com",
      "url": "http://tmschl.com"
    }
  ],
  "engines": {
    "node": "0.10.x"
  },
  "browserify": {
    "transform": [
      "browserify-versionify"
    ]
  },
  "dependencies": {
    "browserify-versionify": "^1.0.3",
    "component-emitter": "^1.1.3",
    "domready": "0.3.0",
    "JSON2": "^0.1.0",
    "spin.js": "^2.0.1",
    "superagent": "^0.21.0"
  },
  "devDependencies": {
    "browserify": "^8.0.3",
    "chai": "^1.10.0",
    "chai-spies": "^0.5.1",
    "del": "^1.1.0",
    "event-stream": "^3.1.7",
    "gulp": "^3.8.10",
    "gulp-awspublish": "0.0.23",
    "gulp-connect": "^2.2.0",
    "gulp-mocha": "^2.0.0",
    "gulp-mocha-phantomjs": "^0.5.1",
    "gulp-remove-empty-lines": "0.0.2",
    "gulp-rename": "^1.2.0",
    "gulp-strip-comments": "^1.0.1",
    "gulp-util": "^3.0.1",
    "gulp-yuicompressor": "0.0.3",
    "karma": "^0.12.28",
    "karma-chrome-launcher": "^0.1.7",
    "karma-firefox-launcher": "^0.1.3",
    "karma-mocha": "^0.1.10",
    "karma-nyan-reporter": "0.0.50",
    "karma-requirejs": "^0.2.2",
    "karma-safari-launcher": "^0.1.1",
    "karma-sauce-launcher": "^0.2.10",
    "karma-sinon": "^1.0.4",
    "lodash.template": "^2.4.1",
    "moment": "^2.8.4",
    "nock": "^0.51.0",
    "vinyl-transform": "^1.0.0"
  },
  "readme": "# Keen IO JavaScript SDK (v3.2.2)\n\n**Important:** v3.2.0 introduced several breaking changes from previous versions. Check out the [Changelog](./CHANGELOG.md#3.2.0) before upgrading.\n\n**Charts issue:** A recent update to the Google Visualization API is causing charts to fail in earlier versions of this library. To resolve the issue, simply update from v3.0.x to [v3.1.0](https://d26b395fwzu5fz.cloudfront.net/3.1.0/keen.js). This is a safe upgrade with no breaking changes from earlier affected versions. Read about this release [here](https://github.com/keen/keen-js/releases/tag/v3.1.0).\n\n[![Build Status](https://api.travis-ci.org/keen/keen-js.png?branch=master)](https://travis-ci.org/keen/keen-js) [![Selenium Test Status](https://saucelabs.com/buildstatus/keenlabs-js)](https://saucelabs.com/u/keenlabs-js)\n\n## Documentation\n\nDocs have been moved into the master branch, so they stay in sync with each release. Check out the latest [here](./docs).\n\nv3.1.0 docs are [here](https://github.com/keen/keen-js/tree/v3.1.0/docs), and v2 docs are [way back here](https://github.com/keen/keen-js/tree/v2).\n\n\n## Get Project ID & API Keys\n\nIf you havenâ€™t done so already, [login to Keen IO to create a project](https://keen.io/login?s=gh_js). The Project ID and API Keys are available on the Project Overview page. You will need these for the next steps.\n\n\n## Install the library\n\n```ssh\n# via npm\n$ npm install keen-js\n\n# or bower\n$ bower install keen-js\n```\n\nFor quick browser use, copy/paste this snippet of JavaScript above the `</head>` tag of your page:\n\n```html\n<script type=\"text/javascript\">\n  !function(a,b){a(\"Keen\",\"https://d26b395fwzu5fz.cloudfront.net//keen.min.js\",b)}(function(a,b,c){var d,e,f;c[\"_\"+a]={},c[a]=function(b){c[\"_\"+a].clients=c[\"_\"+a].clients||{},c[\"_\"+a].clients[b.projectId]=this,this._config=b},c[a].ready=function(b){c[\"_\"+a].ready=c[\"_\"+a].ready||[],c[\"_\"+a].ready.push(b)},d=[\"addEvent\",\"setGlobalProperties\",\"trackExternalLink\",\"on\"];for(var g=0;g<d.length;g++){var h=d[g],i=function(a){return function(){return this[\"_\"+a]=this[\"_\"+a]||[],this[\"_\"+a].push(arguments),this}};c[a].prototype[h]=i(h)}e=document.createElement(\"script\"),e.async=!0,e.src=b,f=document.getElementsByTagName(\"script\")[0],f.parentNode.insertBefore(e,f)},this);\n</script>\n```\n\nOr load the library synchronously from our CDN:\n\n```html\n<script src=\"https://d26b395fwzu5fz.cloudfront.net/3.2.2/keen.min.js\" type=\"text/javascript\"></script>\n```\n\nRead our [Installation guide](./docs/installation.md) to learn about all the ways this library can fit into your workflow.\n\n\n## Configure a new Keen JS client\n\nWhen instantiating a new Keen JS client, there are a number of possible configuration options. A `projectId` is required at all times, and `writeKey` and `readKey` are required for sending or querying data, respectively.\n\n```html\n<script type=\"text/javascript\">\n  var client = new Keen({\n    projectId: \"YOUR_PROJECT_ID\",   // String (required)\n    writeKey: \"YOUR_WRITE_KEY\",     // String (required for sending data)\n    readKey: \"YOUR_READ_KEY\",       // String (required for querying data)\n    protocol: \"https\",              // String (optional: https | http | auto)\n    host: \"api.keen.io/3.0\",        // String (optional)\n    requestType: \"jsonp\"            // String (optional: jsonp, xhr, beacon)\n  });\n</script>\n```\n\nYou can configure new instances for as many projects as necessary.\n\n## Record a single event\n\nHere is a basic example for tracking \"purchases\" in your app:\n\n```javascript\n// Configure an instance for your project\nvar client = new Keen({\n  projectId: \"YOUR_PROJECT_ID\",\n  writeKey: \"YOUR_WRITE_KEY\"\n});\n\n// Create a data object with the properties you want to send\nvar purchase = {\n  item: \"golden gadget\",  \n  price: 25.50,\n  referrer: document.referrer,\n  keen: {\n    timestamp: new Date().toISOString()\n  }\n};\n\n// Send it to the \"purchases\" collection\nclient.addEvent(\"purchases\", purchase);\n```\n\nSend as many events as you like. Each event will be fired off to the Keen IO servers asynchronously.\n\n## Record multiple events\n\n```javascript\n// Configure an instance for your project\nvar client = new Keen({...});\n\n// Send multiple events to several collections\nclient.addEvents({\n  \"purchases\": [\n    { item: \"golden gadget\", price: 25.50, transaction_id: \"f029342\" },\n    { item: \"a different gadget\", price: 17.75, transaction_id: \"f029342\" }\n  ],\n  \"transactions\": [\n    {\n      id: \"f029342\",\n      items: 2,\n      total: 43.25\n    }\n  ]\n});\n```\n\nRead more about all the ways you can track events in our [tracking guide](./docs/track.md).\n\nWondering what else you should track? Browse our [data modeling guide](https://github.com/keen/data-modeling-guide), and send us recommendations or pull requests if you don't find what you're looking for.\n\n\n## Querying events\n\nQueries are first-class citizens, complete with parameter getters and setters.\n\nThe `<Client>.run` method is available on each configured client instance to run one or many analyses on a given project. Read more about running multiple analyses below.\n\n```javascript\nvar your_analysis = new Keen.Query(analysisType, params);\n```\n\n### Example Usage\n\n```javascript\nvar client = new Keen({\n  projectId: \"YOUR_PROJECT_ID\",\n  readKey: \"YOUR_READ_KEY\"\n});\n\nvar count = new Keen.Query(\"count\", {\n  eventCollection: \"pageviews\",\n  groupBy: \"property\",\n  timeframe: \"this_7_days\"\n});\n\n// Send query\nclient.run(count, function(err, res){\n  // if (err) handle error\n  console.log(res.result);\n});\n```\n\nRead more about advanced queries in our [query guide](./docs/query.md).\n\n## Visualization\n\nBuilding charts from queries is easier than ever.\n\nClients have a #draw method with accepts a query, a DOM selector, and a configuration object as arguments. You can call this directly on the client, which will execute a request and visualize its response, like so:\n\n```javascript\nclient.draw(query, selector, config);\n```\n\nA future release will add the ability to plot multiple query responses on a single chart, but for the time being only the first query response will be visualized.\n\n### Example usage\n\n```javascript\nvar count = new Keen.Query(\"count\", {\n  eventCollection: \"pageviews\",\n  groupBy: \"visitor.geo.country\",\n  interval: \"daily\",\n  timeframe: \"this_21_days\"\n});\nclient.draw(count, document.getElementById(\"chart-wrapper\"), {\n  chartType: \"columnchart\",\n  title: \"Custom chart title\"\n});\n```\n\nRead more about building charts from query responses in our [visualization guide](./docs/visualization.md).\n\n## Contributing\n\nThis is an open source project and we love involvement from the community! Hit us up with pull requests and issues.\n\nThe aim is to build up this module to completely represent the API provided by Keen IO, which is quite extensive. The more contributions the better!\n\n## Resources\n\n[Data Modeling Guide](https://api.keen.io/3.0/projects/5337e28273f4bb4499000000/events/click?api_key=a0bb828de21e953a675610cb6e6b8935537b19c2f0ac33937d6d1df2cc8fddbf379a81ad398618897b70d15c6b42647c3e063a689bc367f5c32b66c18010541c0ad1cf3dbd36100dc4475c306b238cb6f5b05f082dc4071e35094a722b1f3e29fad63c933ea8e33e8b892c770df5e1bb&data=eyJwYWdlIjogIkRhdGEgTW9kZWxpbmcgR3VpZGUiLCJyZWZlcnJlciI6ICJSRUFETUUubWQifQ==&redirect=https://github.com/keen/data-modeling-guide/)\n\n[API Technical Reference](https://api.keen.io/3.0/projects/5337e28273f4bb4499000000/events/click?api_key=a0bb828de21e953a675610cb6e6b8935537b19c2f0ac33937d6d1df2cc8fddbf379a81ad398618897b70d15c6b42647c3e063a689bc367f5c32b66c18010541c0ad1cf3dbd36100dc4475c306b238cb6f5b05f082dc4071e35094a722b1f3e29fad63c933ea8e33e8b892c770df5e1bb&data=eyJwYWdlIjogIkFQSSBUZWNobmljYWwgUmVmZXJlbmNlIiwicmVmZXJyZXIiOiAiUkVBRE1FLm1kIn0=&redirect=https://keen.io/docs/api/reference/?s=gh_js)\n\n[API Status](https://api.keen.io/3.0/projects/5337e28273f4bb4499000000/events/click?api_key=a0bb828de21e953a675610cb6e6b8935537b19c2f0ac33937d6d1df2cc8fddbf379a81ad398618897b70d15c6b42647c3e063a689bc367f5c32b66c18010541c0ad1cf3dbd36100dc4475c306b238cb6f5b05f082dc4071e35094a722b1f3e29fad63c933ea8e33e8b892c770df5e1bb&data=eyJwYWdlIjogIkFQSSBTdGF0dXMiLCJyZWZlcnJlciI6ICJSRUFETUUubWQifQ==&redirect=http://status.keen.io/?s=gh_js)\n\n## Support\n\nNeed a hand with something? Shoot us an email at [contact@keen.io](mailto:contact@keen.io)\n",
  "readmeFilename": "README.md",
  "description": "**Important:** v3.2.0 introduced several breaking changes from previous versions. Check out the [Changelog](./CHANGELOG.md#3.2.0) before upgrading.",
  "homepage": "https://github.com/keen/keen-js",
  "_id": "keen-js@3.2.2",
  "_shasum": "8e9e44340b4b9a1ad1355545853850fe86f1d6c5",
  "_from": "keen-js@",
  "_resolved": "https://registry.npmjs.org/keen-js/-/keen-js-3.2.2.tgz"
}
